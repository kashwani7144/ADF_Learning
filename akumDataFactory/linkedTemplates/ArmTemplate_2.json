{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "akumDataFactory"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/P_SCD_T2_Vivid_Raw_Schemas')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SetStartTime",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "StartTime",
							"value": {
								"value": "@formatDateTime(convertFromUtc(utcNow(), 'India Standard Time'), 'yyyy-MM-dd HH:mm:ss.fffffff')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GetWatermarkValue",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "SetStartTime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat(\n  'SELECT WATERMARK_VALUE,WATERMARK_ID FROM dbo.WATERMARK_TRACKER ',\n  'WHERE SOURCE_TABLE_NAME = ''', pipeline().parameters.p_src_table, ''' ',\n  'AND PIPELINE_NAME = ''', pipeline().Pipeline, ''' ',\n  'AND ROW_STS_CD = ''A'''\n)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_Watermark_Tracker",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "SetPreviousWatermark",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GetWatermarkValue",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "PreviousWatermark",
							"value": {
								"value": "@if(\n  or(empty(activity('GetWatermarkValue').output.firstRow), empty(activity('GetWatermarkValue').output.firstRow.WATERMARK_VALUE)),\n  '',\n  formatDateTime(activity('GetWatermarkValue').output.firstRow.WATERMARK_VALUE, 'yyyy-MM-dd HH:mm:ss.fffffff')\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "IsFirstRun",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "SetPreviousWatermark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@empty(variables('PreviousWatermark'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "SqlQuery_After_1_run",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "SqlQuery",
										"value": {
											"value": "@concat(\n  'SELECT * FROM ', pipeline().parameters.p_src_schema, '.', pipeline().parameters.p_src_table,\n  ' WHERE SRC_ROW_INSRT_TSTMP > CAST(''', \n  formatDateTime(variables('PreviousWatermark'), 'yyyy-MM-dd HH:mm:ss'), \n  ''' AS DATETIME2)'\n)",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "SqlQuery_1_run",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "SqlQuery",
										"value": {
											"value": "@concat(\n  'SELECT * FROM ',\n pipeline().parameters.p_src_schema, '.', pipeline().parameters.p_src_table\n)",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "TruncStageTable",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "IsFirstRun",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "LS_Azure_SB_Lkp",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "@concat(\n  'TRUNCATE TABLE [',\n  pipeline().parameters.p_stg_schema, '].[', \n  pipeline().parameters.p_stg_table, '];'\n)",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"p_src_schema": {
						"type": "string",
						"defaultValue": "VIVID"
					},
					"p_src_table": {
						"type": "string",
						"defaultValue": "BLOB_CUSTOMER_RAW"
					},
					"p_stg_schema": {
						"type": "string",
						"defaultValue": "DWH"
					},
					"p_stg_table": {
						"type": "string",
						"defaultValue": "STG_CUSTOMER_DETAILS"
					},
					"p_dim_schema": {
						"type": "string",
						"defaultValue": "DWH"
					},
					"p_dim_table": {
						"type": "string",
						"defaultValue": "DIM_CUSTOMER_DETAILS"
					},
					"p_file_table_id": {
						"type": "int",
						"defaultValue": 1001
					}
				},
				"variables": {
					"StartTime": {
						"type": "String"
					},
					"PreviousWatermark": {
						"type": "String"
					},
					"RowsInserted": {
						"type": "Integer",
						"defaultValue": 0
					},
					"RowsExpired": {
						"type": "Integer",
						"defaultValue": 0
					},
					"RowsDeleted": {
						"type": "Integer",
						"defaultValue": 0
					},
					"SqlQuery": {
						"type": "String"
					}
				},
				"folder": {
					"name": "SCDs"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/P_DF_SCD_T2_Inc_Vivid_Customer')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SCD_T2_VIVID_CUSTOMER_SCHEMA",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_SCD_T2_Vivid_Customer",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"VividCustomerRaw": {},
									"DimCustomer": {},
									"DwhDimCustomerInsert": {},
									"DwhDimCustomerUpdate": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"continuationSettings": {
								"customizedCheckpointKey": "f9b5aa35-6478-4062-b84a-15343c423c1c"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "DataFlows"
				},
				"annotations": [],
				"lastPublishTime": "2025-08-15T04:27:53Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/P_DF_SCD_T2_Incremental')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SCD_T2_VIVID_SCHEMA",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_SCD_T2_Vivid_Scd",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"VividCustomerRaw": {},
									"DimCustomer": {},
									"DwhDimCustomerInsert": {},
									"DwhDimCustomerUpdate": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "DataFlows"
				},
				"annotations": [],
				"lastPublishTime": "2025-08-14T03:03:29Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/P_DF_SCD_T2_Incremental_BKP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SCD_T2_VIVID_SCHEMA",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_SCD_T2_Vivid_Scd",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"VividCustomerRaw": {},
									"DimCustomer": {},
									"DwhDimCustomerInsert": {},
									"DwhDimCustomerUpdate": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "DataFlows"
				},
				"annotations": [],
				"lastPublishTime": "2025-08-14T03:03:29Z"
			},
			"dependsOn": []
		}
	]
}